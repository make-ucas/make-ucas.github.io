---
---
<div class="row align-items-start" style="align-items:flex-start;">
  {% if site.enable_publication_thumbnails %}
    <div class="col col-sm-2 abbr d-flex flex-column justify-content-start" style="padding-top:0;">
      {%- if entry.abbr -%}
        {% assign badge_width = '100px' %}
        {% assign v = site.data.venues[entry.abbr] %}
        {% assign venue_style = null %}
        {% if v and v.color != blank %}
          {% assign venue_style = 'style="background-color:' | append: v.color | append: '; color:#fff; display:block; width:' | append: badge_width | append: '; text-align:center; margin:0 auto; margin-top:0;"' %}
        {%- endif -%}
        <abbr
          class="badge rounded"
          {% if venue_style %}
            {{ venue_style }}
          {% endif -%}
        >
          {% if site.data.venues[entry.abbr].url %}
            <a href="{{ site.data.venues[entry.abbr].url }}" style="color:#fff;">{{ entry.abbr }}</a>
          {% else %}
            <div style="color:#fff;">{{- entry.abbr -}}</div>
          {% endif %}
        </abbr>
        {% if v and (v.type or v.IF) %}
          <div class="badges" style="margin-top:0.35rem;">
            {% if v.type and v.type contains 'CCF' %}
              <span class="badge rounded"
                style="background-color:{{ v.color }}; color:#fff; display:block; width:{{ badge_width }}; text-align:center; margin:0 auto 0.35rem auto;">
                {{ v.type }}
              </span>
            {% endif %}
            {% if v.IF %}
              <span class="badge rounded"
                style="background-color:{{ v.color }}; color:#fff; display:block; width:{{ badge_width }}; text-align:center; margin:0 auto;">
                IF: {{ v.IF }}
              </span>
            {% endif %}
          </div>
        {% endif %}
        {%- comment -%}
          Extra badges (e.g., Oral / Best Paper / custom). These are taken from any of the following fields:
          - entry.honors: comma-separated list, e.g. "Oral, Best Paper"
          - entry.badges: comma-separated list
          - entry.award_name: single label (e.g., "Best Paper")
          - entry.oral: boolean -> adds "Oral"
          Colors are picked from _data/venues.yml if a matching key exists; otherwise fall back to the venue color
          or a default purple.
        {%- endcomment -%}
        {% assign extra_badges = "" | split: "" %}
        {% if entry.honors %}
          {% assign extra_badges = entry.honors | split: ',' %}
        {% elsif entry.badges %}
          {% assign extra_badges = entry.badges | split: ',' %}
        {% endif %}
        {% if entry.award_name %}
          {% assign extra_badges = extra_badges | push: entry.award_name %}
        {% endif %}
        {% if entry.oral %}
          {% assign extra_badges = extra_badges | push: 'Oral' %}
        {% endif %}
        {% if extra_badges and extra_badges.size > 0 %}
          <div class="badges" style="margin-top:0.35rem;">
            {% for eb in extra_badges %}
              {% assign eb_trim = eb | strip %}
              {% assign ebv = site.data.venues[eb_trim] %}
              {% assign eb_color = '#b509ac' %}
              {% if ebv and ebv.color != blank %}
                {% assign eb_color = ebv.color %}
              {% elsif v and v.color != blank %}
                {% assign eb_color = v.color %}
              {% endif %}
              <span class="badge rounded"
                style="background-color:{{ eb_color }}; color:#fff; display:block; width:{{ badge_width }}; text-align:center; margin:0 auto 0.35rem auto;">
                {{ eb_trim }}
              </span>
            {% endfor %}
          </div>
        {% endif %}
      {% else %}
        <abbr class="badge rounded w-100">{{ entry.abbr }}</abbr>
      {% endif %}
      {% if entry.preview %}
        {% if entry.preview contains '://' %}
          <img class="preview z-depth-1 rounded" src="{{ entry.preview }}">
        {% else %}
          {% assign entry_path = entry.preview | prepend: '/assets/img/publication_preview/' %}
          {%
            include figure.liquid
            loading="eager"
            path=entry_path
            sizes = "200px"
            class="preview z-depth-1 rounded"
            zoomable=true
            avoid_scaling=true
            alt=entry.preview
          %}
        {% endif %}
      {% endif %}
    </div>
  {% endif %}

  <!-- Entry bib key -->
  <div id="{{ entry.key }}" class="{% if site.enable_publication_thumbnails %}col-sm-8 mt-0 pt-0{% else %}col-sm-10 mt-0 pt-0{% endif %}">
    <!-- Title -->
    <div class="title">{{ entry.title }}</div>
    {% assign venue_color = nil %}
    {% if entry.abbr and site.data.venues[entry.abbr] and site.data.venues[entry.abbr].color %}
      {% assign venue_color = site.data.venues[entry.abbr].color %}
    {% endif %}
    <!-- Author -->
    <div class="author">
      {%- assign total = entry.author_array | size -%}
      {%- for author in entry.author_array -%}
        {% assign author_is_self = false %}
        {%- assign author_last_name = author.last | regex_replace: '[*∗†‡§¶‖&^]', '' -%}
        {%- assign author_last_html = author.last | regex_replace: '([*∗†‡§¶‖&^]+)', '<sup>\1</sup>' -%}
        {% if site.scholar.last_name contains author_last_name %}
          {% if site.scholar.first_name contains author.first %}
            {% assign author_is_self = true %}
          {% endif %}
        {%- endif -%}
        {% assign coauthor_url = null %}
        {%- assign clean_last_name = author_last_name | downcase | remove_accents -%}
        {% if site.data.coauthors[clean_last_name] %}
          {%- for coauthor in site.data.coauthors[clean_last_name] -%}
            {% if coauthor.firstname contains author.first %}
              {%- assign coauthor_url = coauthor.url -%}
              {% break %}
            {% endif %}
          {% endfor %}
        {%- endif -%}

        {%- if total > 1 -%}
          {% if forloop.first == false %},&nbsp;{% endif %}
          {%- if forloop.last %}and&nbsp;{% endif -%}
        {% endif %}

        {%- if author_is_self -%}
          <span class="self-author" style="color:{{ venue_color | default:'#0d6efd' }}; font-weight:600;">
            {{- author.first }} {{ author_last_html -}}
          </span>
        {%- else -%}
          {%- if coauthor_url -%}
            <a href="{{ coauthor_url }}">
              {{- author.first }}
              {{ author_last_html -}}
            </a>
          {%- else -%}
            {{- author.first }}
            {{ author_last_html -}}
          {% endif %}
        {%- endif -%}
      {%- endfor -%}
      {% if entry.annotation %}
        <i
          class="fa-solid fa-circle-info ml-1"
          data-toggle="popover"
          data-placement="top"
          data-html="true"
          data-content="{{ entry.annotation | escape }}"
        >
        </i>
      {% endif %}
    </div>

    <!-- Journal/Book title and date -->
    {% assign proceedings = 'inproceedings,incollection' | split: ',' %}
    {% assign thesis = 'thesis,mastersthesis,phdthesis' | split: ',' %}
    {% if entry.type == 'article' %}
      {% capture entrytype %}<em>{{ entry.journal }}</em>{% endcapture %}
    {% elsif proceedings contains entry.type %}
      {% capture entrytype %}<em>In {{ entry.booktitle }}</em>{% endcapture %}
    {% elsif thesis contains entry.type %}
      {% capture entrytype %}<em>{{ entry.school }}</em>{% endcapture %}
    {% else %}
      {% capture entrytype %}{% endcapture %}
    {% endif %}
    {% if entry.month %}
      {% capture entrymonth %}{{ " " }}{{ entry.month | capitalize }}{% endcapture %}
    {% endif %}
    {% if entry.year %}
      {% capture entryyear %}{{ " " }}{{ entry.year }}{% endcapture %}
    {% endif %}
    {% if entry.location %}
      {% capture entrytype %}{{ entrytype }}{{ ", " }}{{ entry.location }}{% endcapture %}
    {% endif -%}
    {% if entry.additional_info %}
      {% capture entrytype %}{{ entrytype }}{{ entry.additional_info | markdownify | remove: '<p>' | remove: '</p>' }}{% endcapture %}
    {% endif %}
    {% capture hook_exists %}{% file_exists _includes/hook/bib.liquid %}{% endcapture %}
    {% if hook_exists == 'true' %}
      {% include hook/bib.liquid %}
    {% endif %}
    {% assign entrytype_text = entrytype | strip_html | strip %}
    {% capture periodical %}{{ entrytype }}{% if entrytype_text != "" and entryyear != "" %}, {% endif %}{{ entrymonth }}{{ entryyear }}{% endcapture %}
    <div class="periodical">
      {{ periodical | strip }}
    </div>
    <div class="periodical">
      {{ entry.note | strip }}
    </div>

    <!-- Links/Buttons -->
    <div class="links mt-2">
      {% assign btn_class = 'btn btn-sm btn-outline-primary d-inline-flex align-items-center justify-content-center' %}
      {% assign btn_style = 'min-width: 88px; padding: 6px 18px;' %}
      {% assign bib_remote = entry.biburl | default: entry.dblp %}
      {% if entry.bibtex_show or bib_remote %}
        <a class="{{ btn_class }} bib-toggle"
           style="{{ btn_style }}"
           href="#"
           role="button"
           data-biburl="{{ bib_remote }}"
           data-target="#bib-{{ entry.key }}">
          BIB
        </a>
      {% endif %}
      {% if entry.pdf %}
        <a class="{{ btn_class }}" style="{{ btn_style }}" href="{{ entry.pdf | relative_url }}" target="_blank">PDF</a>
      {% endif %}
      {% if entry.code %}
        <a class="{{ btn_class }}" style="{{ btn_style }}" href="{{ entry.code }}" target="_blank">
          <i class="fab fa-github" style="margin-right:6px;"></i>CODE
        </a>
      {% endif %}
      {% if entry.project %}
        <a class="{{ btn_class }}" style="{{ btn_style }}" href="{{ entry.project }}" target="_blank">PROJECT</a>
      {% endif %}
      {% if entry.video %}
        <a class="{{ btn_class }}" style="{{ btn_style }}" href="{{ entry.video }}" target="_blank">VIDEO</a>
      {% endif %}
    </div>
    {% if site.enable_publication_badges %}
      {% assign entry_has_altmetric_badge = false %}
      {% if entry.altmetric and entry.altmetric != 'false' %}
        {% assign entry_has_altmetric_badge = true %}
      {% endif %}

      {% assign entry_has_dimensions_badge = false %}
      {% if entry.dimensions and entry.dimensions != 'false' %}
        {% assign entry_has_dimensions_badge = true %}
      {% endif %}

      {% assign entry_has_google_scholar_badge = false %}
      {% if entry.google_scholar_id %}
        {% assign entry_has_google_scholar_badge = true %}
      {% endif %}

      {% assign entry_has_inspirehep_badge = false %}
      {% if entry.inspirehep_id %}
        {% assign entry_has_inspirehep_badge = true %}
      {% endif %}
      {% if entry_has_altmetric_badge or entry_has_dimensions_badge or entry_has_google_scholar_badge or entry_has_inspirehep_badge %}
        <div class="badges">
          {% if site.enable_publication_badges.altmetric and entry_has_altmetric_badge %}
            <span
              class="altmetric-embed"
              data-badge-type="2"
              data-badge-popover="right"
              {% if entry.altmetric != blank and entry.altmetric != 'true' %}
                data-altmetric-id="{{ entry.altmetric }}"
              {% elsif entry.arxiv %}
                data-arxiv-id="{{ entry.arxiv }}"
              {% elsif entry.eprint %}
                data-arxiv-id="{{ entry.eprint }}"
              {% elsif entry.doi %}
                data-doi="{{ entry.doi }}"
              {% elsif entry.pmid %}
                data-pmid="{{ entry.pmid }}"
              {% elsif entry.isbn %}
                data-isbn="{{ entry.isbn }}"
              {% endif %}
            ></span>
          {% endif %}
          {% if site.enable_publication_badges.dimensions and entry_has_dimensions_badge %}
            <span
              class="__dimensions_badge_embed__"
              {% if entry.dimensions != blank and entry.dimensions != 'true' %}
                data-id="{{ entry.dimensions }}"
              {% elsif entry.doi %}
                data-doi="{{ entry.doi }}"
              {% else %}
                data-pmid="{{ entry.pmid }}"
              {% endif %}
              data-style="small_rectangle"
              data-legend="hover-right"
              style="margin-bottom: 3px;"
            ></span>
          {% endif %}
          {% if site.enable_publication_badges.google_scholar and entry_has_google_scholar_badge %}
            <a
              href="https://scholar.google.com/citations?view_op=view_citation&hl=en&user={{ site.data.socials.scholar_userid }}&citation_for_view={{ site.data.socials.scholar_userid }}:{{ entry.google_scholar_id }}"
              aria-label="Google Scholar link"
              role="button"
            >
              <img
                src="https://img.shields.io/badge/scholar-{% google_scholar_citations site.data.socials.scholar_userid entry.google_scholar_id %}-4285F4?logo=googlescholar&labelColor=beige"
                alt="{% google_scholar_citations site.data.socials.scholar_userid entry.google_scholar_id %} Google Scholar citations"
              >
            </a>
          {% endif %}
          {% if site.enable_publication_badges.inspirehep and entry_has_inspirehep_badge %}
            <a
              href="https://inspirehep.net/literature/{{ entry.inspirehep_id }}"
              aria-label="Inspirehep link"
              role="button"
            >
              <img
                src="https://img.shields.io/badge/inspire-{% inspirehep_citations entry.inspirehep_id %}-001628?logo=inspire&logoColor=001628&labelColor=beige"
                alt="{% inspirehep_citations entry.inspirehep_id %} InspireHEP citations"
              >
            </a>
          {% endif %}
        </div>
      {% endif %}
    {% endif %}

    {% if entry.award %}
      <!-- Hidden Award block -->
      <div class="award hidden d-print-inline">
        <p>{{ entry.award | markdownify }}</p>
      </div>
    {% endif %}

    {% if entry.abstract %}
      <!-- Hidden abstract block -->
      <div class="abstract hidden">
        <p>{{ entry.abstract }}</p>
      </div>
    {% endif %}

    {% assign bib_remote = entry.biburl | default: entry.dblp %}
    {% if bib_remote %}
      {% assign bib_remote = bib_remote | replace: '{', '' | replace: '}', '' | strip %}
    {% endif %}
    {% if entry.bibtex_show or bib_remote %}
      <!-- Hidden bibtex block (remote-first with local fallback) -->
      <div id="bib-{{ entry.key }}" class="bibtex hidden" data-loaded="0">
        {% if entry.bibtex_show %}
          {% highlight bibtex %}
          {{- entry.bibtex | hideCustomBibtex -}}
          {% endhighlight %}
        {% else %}
          <pre class="mb-0"><code class="language-bibtex"></code></pre>
        {% endif %}
      </div>
    {% endif %}

    {% if entry.video and site.enable_video_embedding %}
      <!-- Hidden video block -->
      <div class="abstract hidden">
        <div style="text-align: center;">{% include video.liquid path=entry.video class="img-fluid rounded z-depth-1" controls=true %}</div>
      </div>
    {% endif %}
  </div>
  <script>
  if (!window.__bibFetcherInjected) {
    window.__bibFetcherInjected = true;
    (function () {
      function toggle(el) {
        if (!el) return;
        el.classList.toggle('hidden');
      }
      function show(el) {
        if (!el) return;
        el.classList.remove('hidden');
      }
      function escapeHTML(s) {
        return s.replace(/[&<>]/g, function(c){ return {'&':'&amp;','<':'&lt;','>':'&gt;'}[c]; });
      }
      document.addEventListener('click', function (e) {
        var btn = e.target.closest('.bib-toggle');
        if (!btn) return;
        e.preventDefault();
        var target = document.querySelector(btn.getAttribute('data-target'));
        if (!target) return;
        var alreadyLoaded = target.getAttribute('data-loaded') === '1';
        var url = btn.getAttribute('data-biburl');
        // If already loaded (remote or fallback), just toggle
        if (alreadyLoaded) {
          toggle(target);
          return;
        }
        // Remote-first if URL exists
        if (url) {
          fetch(url, { credentials: 'omit' })
            .then(function (r) { if (!r.ok) throw new Error('HTTP ' + r.status); return r.text(); })
            .then(function (txt) {
              target.innerHTML = '<pre class="mb-0"><code class="language-bibtex">' + escapeHTML(txt) + '</code></pre>';
              target.setAttribute('data-loaded', '1');
              show(target);
            })
            .catch(function () {
              // Fallback: whatever is already inside (local bib or empty)
              target.setAttribute('data-loaded', '1');
              show(target);
            });
        } else {
          // No remote URL, just reveal fallback
          target.setAttribute('data-loaded', '1');
          show(target);
        }
      }, false);
    })();
  }
  </script>
</div>
